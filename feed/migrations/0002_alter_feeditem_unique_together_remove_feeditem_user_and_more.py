# Generated by Django 5.2.6 on 2025-09-29 05:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('feed', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='feeditem',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='feeditem',
            name='user',
        ),
        migrations.CreateModel(
            name='ContentScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('post', 'Post'), ('project', 'Project'), ('university_announcement', 'University Announcement')], help_text='Type of content', max_length=30)),
                ('content_id', models.UUIDField(help_text='ID of the content object')),
                ('base_score', models.FloatField(default=0.0, help_text='Base content quality score')),
                ('engagement_score', models.FloatField(default=0.0, help_text='Engagement-based score (likes, comments, etc.)')),
                ('recency_score', models.FloatField(default=0.0, help_text='Time-decay score')),
                ('trending_score', models.FloatField(default=0.0, help_text='Trending/viral score')),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(help_text='When this score cache expires')),
            ],
            options={
                'verbose_name': 'Content Score',
                'verbose_name_plural': 'Content Scores',
                'indexes': [models.Index(fields=['content_type', 'content_id'], name='feed_conten_content_fff230_idx'), models.Index(fields=['content_type', '-base_score'], name='feed_conten_content_b54f07_idx'), models.Index(fields=['-calculated_at'], name='feed_conten_calcula_f9f872_idx'), models.Index(fields=['expires_at'], name='feed_conten_expires_faeadc_idx')],
                'unique_together': {('content_type', 'content_id')},
            },
        ),
        migrations.CreateModel(
            name='TimelineFeedCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_type', models.CharField(choices=[('home', 'Home Feed'), ('university', 'University Feed'), ('public', 'Public Feed'), ('trending', 'Trending Feed')], help_text='Type of feed cached', max_length=20)),
                ('cached_content', models.JSONField(default=list, help_text='List of {content_type, content_id, score} objects')),
                ('total_count', models.PositiveIntegerField(default=0, help_text='Total available items for this feed')),
                ('last_refresh', models.DateTimeField(auto_now=True, help_text='When this cache was last refreshed')),
                ('expires_at', models.DateTimeField(help_text='When this cache expires')),
                ('user', models.ForeignKey(help_text='User this cache belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='timeline_caches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Timeline Feed Cache',
                'verbose_name_plural': 'Timeline Feed Caches',
            },
        ),
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('post', 'Post'), ('project', 'Project'), ('university_announcement', 'University Announcement')], help_text='Type of content', max_length=30)),
                ('content_id', models.UUIDField(help_text='ID of the content object')),
                ('action', models.CharField(choices=[('view', 'View'), ('click', 'Click'), ('like', 'Like'), ('share', 'Share'), ('comment', 'Comment')], help_text='Type of interaction', max_length=20)),
                ('view_time', models.FloatField(blank=True, help_text='Time spent viewing (for view actions)', null=True)),
                ('feed_type', models.CharField(blank=True, choices=[('home', 'Home Feed'), ('university', 'University Feed'), ('public', 'Public Feed'), ('profile', 'Profile View'), ('direct', 'Direct View')], help_text='Context where interaction occurred', max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(help_text='User who performed the interaction', on_delete=django.db.models.deletion.CASCADE, related_name='content_interactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Interaction',
                'verbose_name_plural': 'User Interactions',
            },
        ),
        migrations.DeleteModel(
            name='FeedCache',
        ),
        migrations.DeleteModel(
            name='FeedItem',
        ),
        migrations.AddIndex(
            model_name='timelinefeedcache',
            index=models.Index(fields=['user', 'feed_type'], name='feed_timeli_user_id_1b343a_idx'),
        ),
        migrations.AddIndex(
            model_name='timelinefeedcache',
            index=models.Index(fields=['expires_at'], name='feed_timeli_expires_5dd726_idx'),
        ),
        migrations.AddIndex(
            model_name='timelinefeedcache',
            index=models.Index(fields=['-last_refresh'], name='feed_timeli_last_re_7e5140_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='timelinefeedcache',
            unique_together={('user', 'feed_type')},
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['user', 'content_type', 'content_id'], name='feed_userin_user_id_015dae_idx'),
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['content_type', 'content_id', 'action'], name='feed_userin_content_71bcf7_idx'),
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['-created_at'], name='feed_userin_created_84d5ee_idx'),
        ),
        migrations.AddIndex(
            model_name='userinteraction',
            index=models.Index(fields=['user', '-created_at'], name='feed_userin_user_id_ced2f2_idx'),
        ),
    ]
