# Generated by Django 5.1.6 on 2025-09-28 00:35

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
        ('universities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(help_text='Post content (1-2000 characters)', max_length=2000, validators=[django.core.validators.MinLengthValidator(1)])),
                ('image', models.ImageField(blank=True, help_text='Optional image attachment', null=True, upload_to='post_images/')),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('university', 'University'), ('private', 'Private')], default='public', help_text='Post visibility level', max_length=20)),
                ('is_edited', models.BooleanField(default=False, help_text='Whether this post has been edited')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(help_text='Post author', on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('tagged_projects', models.ManyToManyField(blank=True, help_text='Projects tagged in this post', related_name='posts', to='projects.project')),
                ('university', models.ForeignKey(help_text="University associated with this post (derived from author's university)", on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='universities.university')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(help_text='User who liked the post', on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(help_text='Post that is liked', on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='posts.post')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(help_text='Comment content (1-1000 characters)', max_length=1000, validators=[django.core.validators.MinLengthValidator(1)])),
                ('is_edited', models.BooleanField(default=False, help_text='Whether this comment has been edited')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(help_text='Comment author', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, help_text='Parent comment for nested replies', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.comment')),
                ('post', models.ForeignKey(help_text='Post this comment belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='posts.post')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostShare',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(help_text='Post that was shared', on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='posts.post')),
                ('user', models.ForeignKey(help_text='User who shared the post', on_delete=django.db.models.deletion.CASCADE, related_name='shared_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post Share',
                'verbose_name_plural': 'Post Shares',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['author'], name='posts_post_author__19d68b_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['visibility'], name='posts_post_visibil_c4edb4_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['created_at'], name='posts_post_created_dadbfe_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['post'], name='posts_like_post_id_db9889_idx'),
        ),
        migrations.AddIndex(
            model_name='like',
            index=models.Index(fields=['user'], name='posts_like_user_id_842d1b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('post', 'user')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post'], name='posts_comme_post_id_06cfd5_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['author'], name='posts_comme_author__a503ad_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['created_at'], name='posts_comme_created_f825cb_idx'),
        ),
        migrations.AddIndex(
            model_name='postshare',
            index=models.Index(fields=['post'], name='posts_posts_post_id_2e18e5_idx'),
        ),
        migrations.AddIndex(
            model_name='postshare',
            index=models.Index(fields=['user'], name='posts_posts_user_id_cd81d2_idx'),
        ),
    ]
