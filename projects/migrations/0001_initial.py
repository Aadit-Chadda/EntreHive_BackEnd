# Generated by Django 5.1.6 on 2025-09-28 00:35

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('universities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Project title (3-140 characters)', max_length=140, validators=[django.core.validators.MinLengthValidator(3)])),
                ('project_type', models.CharField(choices=[('startup', 'Startup'), ('side_project', 'Side Project'), ('research', 'Research'), ('hackathon', 'Hackathon'), ('course_project', 'Course Project')], help_text='Type of project', max_length=20)),
                ('status', models.CharField(choices=[('concept', 'Concept'), ('mvp', 'MVP'), ('launched', 'Launched')], default='concept', help_text='Current project status', max_length=20)),
                ('summary', models.TextField(blank=True, help_text='Detailed project description', max_length=5000, null=True)),
                ('needs', models.JSONField(blank=True, default=list, help_text='Array of project needs (design, dev, marketing, etc.)')),
                ('categories', models.JSONField(blank=True, default=list, help_text='Project categories (e.g., AI, EdTech)')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Project tags for searchability')),
                ('preview_image', models.URLField(blank=True, help_text='Preview image URL', null=True)),
                ('pitch_url', models.URLField(blank=True, help_text='Pitch video/presentation URL', null=True)),
                ('repo_url', models.URLField(blank=True, help_text='Repository URL (GitHub, GitLab, etc.)', null=True)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('university', 'University'), ('cross_university', 'Cross University'), ('public', 'Public')], default='private', help_text='Project visibility level', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(help_text='Project owner', on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL)),
                ('team_members', models.ManyToManyField(blank=True, help_text='Users who are part of this project', related_name='projects', to=settings.AUTH_USER_MODEL)),
                ('university', models.ForeignKey(help_text="University associated with this project (derived from owner's university)", on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='universities.university')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, help_text='Optional invitation message', max_length=500, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invitee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_invitations', to=settings.AUTH_USER_MODEL)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='projects.project')),
            ],
            options={
                'verbose_name': 'Project Invitation',
                'verbose_name_plural': 'Project Invitations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['project_type'], name='projects_pr_project_573ce6_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['status'], name='projects_pr_status_f023cb_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['visibility'], name='projects_pr_visibil_b48d7f_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['created_at'], name='projects_pr_created_6b02e3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='projectinvitation',
            unique_together={('project', 'invitee')},
        ),
    ]
